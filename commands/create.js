const { SlashCommandBuilder } = require('@discordjs/builders');
const { MessageEmbed } = require('discord.js');
const axios = require('axios');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('createcontent')
        .setDescription('Generate content using AI with a specified exploit level and content type.')
        .addStringOption(option =>
            option.setName('description')
                .setDescription('Description of the content to generate (e.g., "Create a teleport script for Roblox")')
                .setRequired(true)
        )
        .addStringOption(option =>
            option.setName('exploit_level')
                .setDescription('Specify the exploit level (e.g., Full, Partial, Basic)')
                .setRequired(false)
                .addChoices(
                    { name: 'Full', value: 'full' },
                    { name: 'Partial', value: 'partial' },
                    { name: 'Basic', value: 'basic' }
                )
        )
        .addStringOption(option =>
            option.setName('content_type')
                .setDescription('Type of content to generate (e.g., "code", "image", "story")')
                .setRequired(false)
                .addChoices(
                    { name: 'Code Snippet', value: 'code' },
                    { name: 'Image', value: 'image' },
                    { name: 'Story', value: 'story' }
                )
        ),
    async execute(interaction) {
        const description = interaction.options.getString('description');
        const exploitLevel = interaction.options.getString('exploit_level') || 'any';
        const contentType = interaction.options.getString('content_type') || 'code';

        const prompt = `Create ${contentType} content with an exploit level of ${exploitLevel}. The task is: ${description}.`;

        const processingEmbed = new MessageEmbed()
            .setColor('#0092e0')
            .setTitle('Content Generation in Progress')
            .setDescription(`Generating ${contentType} content for: "${description}" with exploit level: "${exploitLevel}"`)
            .setTimestamp();

        await interaction.reply({ embeds: [processingEmbed] });

        try {
            const response = await axios.post(
                `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${process.env.GOOGLE_API_KEY}`,
                {
                    contents: [
                        {
                            parts: [
                                {
                                    text: prompt
                                }
                            ]
                        }
                    ]
                },
                {
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }
            );

            const aiResponse = response.data.candidates[0].content.parts[0].text;

            const resultEmbed = new MessageEmbed()
                .setColor('#00FF00')
                .setTitle(`${contentType.charAt(0).toUpperCase() + contentType.slice(1)} Content`)
                .setDescription(`Here is the generated ${contentType} content for "${description}" with exploit level "${exploitLevel}":`)
                .addField('Generated Content', `\`\`\`${aiResponse}\n\`\`\``)
                .setFooter('Content generated by AI.')
                .setTimestamp();

            interaction.followUp({ embeds: [resultEmbed] });
        } catch (error) {
            console.error('Error interacting with AI API:', error);
            return interaction.followUp('Sorry, I couldn\'t generate the requested content at the moment.');
        }
    }
};
